"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.ensurePluginRequirementsAreMet = void 0;

var _fetchGraphql = _interopRequireDefault(require("../utils/fetch-graphql"));

var _formatLogMessage = require("../utils/format-log-message");

var _getGatsbyApi = require("../utils/get-gatsby-api");

var _supportedRemotePluginVersions = require("../supported-remote-plugin-versions");

const areRemotePluginVersionsSatisfied = async ({
  helpers
}) => {
  let wpgqlIsSatisfied;
  let wpGatsbyIsSatisfied;

  try {
    const {
      data
    } = await (0, _fetchGraphql.default)({
      query:
      /* GraphQL */
      `
        query WPGatsbyCompatibility(
          $wpgqlVersion: String!
          $wpgatsbyVersion: String!
        ) {
          wpGatsbyCompatibility(
            wpGatsbyVersionRange: $wpgatsbyVersion
            wpGQLVersionRange: $wpgqlVersion
          ) {
            satisfies {
              wpGQL
              wpGatsby
            }
          }
        }
      `,
      variables: {
        wpgqlVersion: _supportedRemotePluginVersions.supportedWpPluginVersions.WPGraphQL.version,
        wpgatsbyVersion: _supportedRemotePluginVersions.supportedWpPluginVersions.WPGatsby.version
      },
      panicOnError: false,
      throwGqlErrors: true
    });
    wpgqlIsSatisfied = data.wpGatsbyCompatibility.satisfies.wpGQL;
    wpGatsbyIsSatisfied = data.wpGatsbyCompatibility.satisfies.wpGatsby;
  } catch (e) {
    if (e.message.includes(`Cannot query field "wpGatsbyCompatibility" on type "RootQuery".`)) {
      helpers.reporter.panic((0, _formatLogMessage.formatLogMessage)(`Your version of WPGatsby is too old to determine if we're compatible.${_supportedRemotePluginVersions.genericDownloadMessage}`));
    } else {
      helpers.reporter.panic(e.message);
    }
  } // a message explaining why these are the minimum versions


  const reasons = `${_supportedRemotePluginVersions.supportedWpPluginVersions.WPGraphQL.reason || _supportedRemotePluginVersions.supportedWpPluginVersions.WPGatsby.reason ? `\n\nReasons:\n\n` : ``}${_supportedRemotePluginVersions.supportedWpPluginVersions.WPGraphQL.reason ? `- ${_supportedRemotePluginVersions.supportedWpPluginVersions.WPGraphQL.reason}` : ``}${_supportedRemotePluginVersions.supportedWpPluginVersions.WPGraphQL.reason && _supportedRemotePluginVersions.supportedWpPluginVersions.WPGatsby.reason ? `\n\n` : ``}${_supportedRemotePluginVersions.supportedWpPluginVersions.WPGatsby.reason ? `- ${_supportedRemotePluginVersions.supportedWpPluginVersions.WPGatsby.reason}` : ``}`;
  let message;

  if (!wpgqlIsSatisfied && wpGatsbyIsSatisfied) {
    message = `Your remote version of WPGraphQL is not within the accepted range (${_supportedRemotePluginVersions.supportedWpPluginVersions.WPGraphQL.version}).

\tDownload v ${_supportedRemotePluginVersions.supportedWpPluginVersions.WPGraphQL.version} at https://github.com/wp-graphql/wp-graphql/releases

\tIf you're upgrading from an earlier version, read the release notes for each version between your old and new versions to determine which breaking changes you might encounter based on your use of the schema.
${reasons}
`;
  }

  if (!wpGatsbyIsSatisfied) {
    message = `Your remote version of WPGatsby is not within the accepted range (${_supportedRemotePluginVersions.supportedWpPluginVersions.WPGatsby.version})

\tDownload v ${_supportedRemotePluginVersions.supportedWpPluginVersions.WPGatsby.version} at https://github.com/TylerBarnes/using-gatsby-source-wordpress-experimental/tree/master/WordPress/plugins
${reasons}`;
  }

  if (!wpGatsbyIsSatisfied && !wpgqlIsSatisfied) {
    message = `WPGatsby and WPGraphQL are both outside the accepted version ranges.
visit https://github.com/TylerBarnes/using-gatsby-source-wordpress-experimental/tree/master/WordPress/plugins to download the latest versions.
${reasons}`;
  }

  if (message) {
    helpers.reporter.panic((0, _formatLogMessage.formatLogMessage)(message));
  }
};

const isWpGatsby = async () => (0, _fetchGraphql.default)({
  query:
  /* GraphQL */
  `
      {
        isWpGatsby
      }
    `,
  errorMap: {
    from: `Cannot query field "isWpGatsby" on type "RootQuery".`,
    // @todo replace this link with another once we're out of alpha
    to: `WPGatsby is not active in your WordPress installation.\nTo download the latest versions of WPGatsby and WPGraphL, visit:\nhttps://github.com/TylerBarnes/using-gatsby-source-wordpress-experimental/tree/master/WordPress/plugins`
  },
  panicOnError: true
});

const ensurePluginRequirementsAreMet = async (helpers, _pluginOptions) => {
  if (helpers.traceId === `refresh-createSchemaCustomization`) {
    return;
  }

  const {
    debug: {
      disableCompatibilityCheck
    }
  } = (0, _getGatsbyApi.getPluginOptions)();
  await isWpGatsby();

  if (!disableCompatibilityCheck) {
    await areRemotePluginVersionsSatisfied({
      helpers
    });
  }
};

exports.ensurePluginRequirementsAreMet = ensurePluginRequirementsAreMet;